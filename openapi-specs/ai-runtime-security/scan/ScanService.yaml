openapi: 3.0.3
info:
  title: AISec API service
  description: OpenAPI Specification for the AI Runtime Security API service
  version: 0.0.0

servers:
  - url: 'http://localhost:39090/'
    description: 'Local'

tags:
  - name: Scan Request
    description: scan request description

paths:
  /v1/scan/sync/request:
    post:
      summary: Send a Synchronous Scan Request
      description: Post a scan request containing prompt/model-response that returns a synchronous scan response
      security: []
      operationId: ScanSyncRequest
      tags:
        - Scans
      requestBody:
        description: Scan request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanRequest'
      responses:
        '200':
          description: successfully scanned request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
        default:
          description: error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  error:
                    type: string

  /v1/scan/async/request:
    post:
      summary: Send an Asynchronous Scan Request
      description: Post a scan request that returns asynchronous scan response
      security: []
      operationId: ScanAsyncRequest
      tags:
        - Scans
      requestBody:
        description: A list of scan request objects
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AsyncScanRequest'
      responses:
        '200':
          description: successfully scanned request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncScanResponse'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/scan/results:
    get:
      summary: Retrieve Scan Results by ScanIDs
      description: Get the Scan results for upto a maximum of 5 Scan IDs
      security: [ ]
      operationId: GetScanResultsByScanIDs
      tags:
        - Scan Results
      parameters:
        - name: scan_ids
          in: query
          description: Scan Ids for Results
          required: true
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
              nullable: false
            maximum: 5
          style: form   # Serialize as scan_ids=id1,id2,id3
          explode: false
      responses:
        200:
          description: Successfully returned records for Scan Results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanIdResult'
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/scan/reports:
    get:
      summary: Retrieve Threat Scan Reports by Report IDs
      description: Get the Threat Scan Reports for a given list of report_ids
      security: [ ]
      tags:
        - Threat Scan Reports
      operationId: GetThreatScanReports
      parameters:
        - name: report_ids
          in: query
          description: Report Ids for Results
          required: true
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
              nullable: false
            maximum: 5
          style: form   # Serialize as report_ids=id1,id2,id3
          explode: false   
      responses:
        200:
          description: Successfully returned Threat Scan Reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatScanReportObjects'
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    ScanRequest:
      type: object
      properties:
        tr_id:
          type: integer
          format: int32
          description: Unique identifier for the transaction correlating prompt and response
        ai_profile:
          $ref: '#/components/schemas/AiProfile'
        metadata:
          $ref: '#/components/schemas/Metadata'
        contents:
          description: List of prompt or response or prompt/response pairs. The last element is the one that needs to be scanned, and the previous elements are the context for the scan.
          type: array
          items:
            type: object
            properties:
              prompt:
                type: string
                description: The prompt content that you want to scan 
              response:
                type: string
                description: The response content that you want to scan
      required:
        - contents
        - ai_profile

    AiProfile:
      type: object
      properties:
        profile_id:
          description: Unique identifier for the profile. If not provided, then profile_name is required.
          type: string
          format: uuid
        profile_name:
          description: Name of the profile. If not provided, then profile_id is required.
          type: string

    Metadata:
      type: object
      properties:
        app_name:
          type: string
          description: AI application requesting the content scan
        app_user:
          type: string
          description: End user using the AI application
        ai_model:
          type: string
          description: AI model serving the AI application


    ScanResponse:
      type: object
      properties:
        report_id:
          type: string
          description: Unique identifier for the scan report
        scan_id:
          type: string
          format: uuid
          description: Unique identifier for the scan 
        tr_id:
          type: integer
          format: int32
          description: Unique identifier for the transaction
        profile_id:
          type: string
          format: uuid
          description: Unique identifier of the AI security profile used for scanning
        profile_name:
          type: string
          description: AI security profile name used for scanning
        category:
          type: string
          description: Category of the scanned content verdicts such as "malicious" or "benign"
        action:
          type: string
          description: The action is set to "block" or "allow" based on AI security profile used for scanning
        prompt_detected:
          $ref: '#/components/schemas/PromptDetected'
        response_detected:
          $ref: '#/components/schemas/response_detected'
        created_at:
          type: string
          format: date-time
          description: Scan request timestamp
        completed_at:
          type: string
          format: date-time
          description: Scan completion timestamp
      required:
        - report_id
        - scan_id
        - category
        - action

    PromptDetected:
      type: object
      properties:
        url_cats:
          type: boolean
          description: Indicates whether prompt contains any malicious URLs
        dlp:
          type: boolean
          description: Indicates whether prompt contains any sensitive information
        injection:
          type: boolean
          description: Indicates whether prompt contains any injection threats

    response_detected:
      type: object
      properties:
        url_cats:
          type: boolean
          description: Indicates whether response contains any malicious URLs
        dlp:
          type: boolean
          description: Indicates whether response contains any sensitive information
        
    ScanIdResult:
      type: object
      properties:
        req_id:
          type: integer
          description: Unique identifier of an individual element sent in the batch scan request
        status:
          type: string
          description: Scan request processing state such as "complete" or "pending" 
        scan_id:
          type: string
          description: Unique identifier for the scan
        result:
          $ref: '#/components/schemas/ScanResponse'

    AsyncScanRequest:
      type: array
      items:
        $ref: '#/components/schemas/AsyncScanObject'

    AsyncScanObject:
      type: object
      properties:
        req_id:
          type: integer
          format: uint32
          description: Unique identifier of an individual element sent in the batch scan request
        scan_req:
          $ref: '#/components/schemas/ScanRequest'
      required:
        - req_id
        - scan_req

    AsyncScanResponse:
      type: object
      properties:
        received:
          type: string
          format: date-time
          description: Asynchronous scan received timestamp
        scan_id:
          type: string
          description: Unique identifier for the asynchronous scan request
        report_id:
          type: string
          description: Unique identifier for the asynchronous scan report
      required:
        - received
        - scan_id

    ThreatScanReportObjects:
      type: array
      items:
        $ref: '#/components/schemas/ThreatScanReportObject'

    ThreatScanReportObject:
      type: object
      properties:
        report_id:
          type: string
          description: Unique identifier for the scan report
        scan_id:
          type: string
          description: Unique identifier for the scan
        req_id:
          type: integer
          format: uint32
          description: Unique identifier of an individual element sent in the batch scan request
        transaction_id:
          type: string
          description: Unique identifier for the transaction
        detection_results:
          type: array
          items:
            $ref: '#/components/schemas/DetectionServiceResultObject'

    DetectionServiceResultObject:
      type: object
      properties:
        data_type:
          type: string
          description: Content type such as "prompt" or "response"
        detection_service:
          type: string
          description: Detection service name generating the results such as "urlf", "dlp", and "prompt injection"
        verdict:
          type: string
          description: Detection service verdict such as "malicious" or "benign"
        action:
          type: string
          description: The action is set to "block" or "allow" based on AI security profile used for scanning
        result_detail:
          $ref: '#/components/schemas/DSDetailResultObject'

    DSDetailResultObject:
      type: object
      properties:
        urlf_report:
          $ref: '#/components/schemas/UrlFilterReportObject'
        dlp_report:
          $ref: '#/components/schemas/DlpReportObject'

    UrlFilterReportObject:
      type: array
      items:
        $ref: '#/components/schemas/UrlfEntryObject'

    UrlfEntryObject:
      type: object
      properties:
        url:
          type: string
          description: URL in the scan request
        risk_level:
          type: string
          description: Risk level associated with the URL, such as "high", "medium", or "low"
        categories:
          type: array
          description: Categories associated with the URL
          items:
            type: string

    DlpReportObject:
      type: object
      properties:
        dlp_report_id:
          type: string
          description:  Unique identifier for the DLP report
        dlp_profile_name:
          type: string
          description: DLP profile name used for the scan
        dlp_profile_id:
          type: string
          description: Unique identifier for the DLP profile used for the scan
        dlp_profile_version:
          type: integer
          format: int32
          description: Version of the DLP profile used for the scan
        data_pattern_rule1_verdict:
          type: string
          description: Indicates whether there was a content match for this rule such as "MATCHED" or "NOT MATCHED"
        data_pattern_rule2_verdict:
          type: string
          description: Indicates whether there was a content match for this rule such as "MATCHED" or "NOT MATCHED"

    Error:
      type: object
      properties:
        status_code:
          type: integer
          format: int32
          description: The HTTP status code for the error
        message:
          type: string
          description: The error message
      required:
        - code
        - message